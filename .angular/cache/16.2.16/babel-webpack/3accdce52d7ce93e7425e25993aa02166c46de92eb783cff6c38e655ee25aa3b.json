{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let NgoRegisterComponent = class NgoRegisterComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.registerForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      registerNo: ['', Validators.required],\n      address: ['', Validators.required],\n      contactNo: ['', Validators.required],\n      city: ['', Validators.required],\n      website: ['']\n    });\n  }\n  onSubmit() {\n    if (this.registerForm.valid) {\n      console.log(this.registerForm.value);\n      // Add your registration logic here\n    } else {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.registerForm.controls).forEach(key => {\n        this.registerForm.get(key)?.markAsTouched();\n      });\n    }\n  }\n};\nNgoRegisterComponent = __decorate([Component({\n  selector: 'app-ngo-register',\n  templateUrl: './ngo-register.component.html',\n  styleUrls: ['./ngo-register.component.css']\n})], NgoRegisterComponent);","map":{"version":3,"names":["Component","NgoRegisterComponent","constructor","fb","registerForm","group","name","Validators","required","email","password","minLength","registerNo","address","contactNo","city","website","onSubmit","valid","console","log","value","Object","keys","controls","forEach","key","get","markAsTouched","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Angular\\nourish-now\\src\\app\\register\\ngo-register\\ngo-register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-ngo-register',\n  templateUrl: './ngo-register.component.html',\n  styleUrls: ['./ngo-register.component.css']\n})\nexport class NgoRegisterComponent {\n\n  registerForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.registerForm = this.fb.group({\n      name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      registerNo: ['', Validators.required],\n      address: ['', Validators.required],\n      contactNo: ['', Validators.required],\n      city: ['', Validators.required],\n      website: ['']\n    });\n  }\n\n  onSubmit() {\n    if (this.registerForm.valid) {\n      console.log(this.registerForm.value);\n      // Add your registration logic here\n    } else {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.registerForm.controls).forEach(key => {\n        this.registerForm.get(key)?.markAsTouched();\n      });\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAI/BC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACpB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MAChCC,IAAI,EAAE,CAAC,EAAE,EAAEC,UAAU,CAACC,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACF,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACE,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACH,UAAU,CAACC,QAAQ,EAAED,UAAU,CAACI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,UAAU,EAAE,CAAC,EAAE,EAAEL,UAAU,CAACC,QAAQ,CAAC;MACrCK,OAAO,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACC,QAAQ,CAAC;MAClCM,SAAS,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACC,QAAQ,CAAC;MACpCO,IAAI,EAAE,CAAC,EAAE,EAAER,UAAU,CAACC,QAAQ,CAAC;MAC/BQ,OAAO,EAAE,CAAC,EAAE;KACb,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACb,YAAY,CAACc,KAAK,EAAE;MAC3BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,YAAY,CAACiB,KAAK,CAAC;MACpC;KACD,MAAM;MACL;MACAC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACnB,YAAY,CAACoB,QAAQ,CAAC,CAACC,OAAO,CAACC,GAAG,IAAG;QACpD,IAAI,CAACtB,YAAY,CAACuB,GAAG,CAACD,GAAG,CAAC,EAAEE,aAAa,EAAE;MAC7C,CAAC,CAAC;;EAEN;CACD;AA5BY3B,oBAAoB,GAAA4B,UAAA,EALhC7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACW/B,oBAAoB,CA4BhC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}