{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nexport let NavbarComponent = class NavbarComponent {\n  constructor(router, navi) {\n    this.router = router;\n    this.navi = navi;\n    this.isMenuOpen = false;\n    this.isRegisterDropdownOpen = false;\n    this.isMobile = false;\n    this.checkScreenSize();\n  }\n  onResize() {\n    this.checkScreenSize();\n  }\n  checkScreenSize() {\n    this.isMobile = window.innerWidth < 768;\n    if (!this.isMobile) {\n      this.isMenuOpen = false;\n    }\n  }\n  toggleMenu() {\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n  toggleRegisterDropdown(event) {\n    event.preventDefault();\n    this.isRegisterDropdownOpen = !this.isRegisterDropdownOpen;\n  }\n  closeDropdown() {\n    this.isRegisterDropdownOpen = false;\n  }\n  goToLoginComponent() {\n    this.router.navigate(['items'], {\n      relativeTo: this.router\n    });\n  }\n};\n__decorate([HostListener('window:resize', ['$event'])], NavbarComponent.prototype, \"onResize\", null);\nNavbarComponent = __decorate([Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})], NavbarComponent);","map":{"version":3,"names":["Component","HostListener","NavbarComponent","constructor","router","navi","isMenuOpen","isRegisterDropdownOpen","isMobile","checkScreenSize","onResize","window","innerWidth","toggleMenu","toggleRegisterDropdown","event","preventDefault","closeDropdown","goToLoginComponent","navigate","relativeTo","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Angular\\nourish-now\\src\\app\\navbar\\navbar.component.ts"],"sourcesContent":["import { Component, HostListener } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  isMenuOpen = false;\n  isRegisterDropdownOpen = false;\n  isMobile = false;\n\n  constructor(private router: Router, private navi) {\n\n    this.checkScreenSize();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  onResize() {\n    this.checkScreenSize();\n  }\n\n  checkScreenSize() {\n    this.isMobile = window.innerWidth < 768;\n    if (!this.isMobile) {\n      this.isMenuOpen = false;\n    }\n  }\n\n  toggleMenu() {\n    this.isMenuOpen = !this.isMenuOpen;\n  }\n\n  toggleRegisterDropdown(event: Event) {\n    event.preventDefault();\n    this.isRegisterDropdownOpen = !this.isRegisterDropdownOpen;\n  }\n\n  closeDropdown() {\n    this.isRegisterDropdownOpen = false;\n  }\n\n  goToLoginComponent() {\n    this.router.navigate(['items'], { relativeTo: this.router });  }\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,QAAQ,eAAe;AAShD,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAK1BC,YAAoBC,MAAc,EAAUC,IAAI;IAA5B,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IAJhD,KAAAC,UAAU,GAAG,KAAK;IAClB,KAAAC,sBAAsB,GAAG,KAAK;IAC9B,KAAAC,QAAQ,GAAG,KAAK;IAId,IAAI,CAACC,eAAe,EAAE;EACxB;EAGAC,QAAQA,CAAA;IACN,IAAI,CAACD,eAAe,EAAE;EACxB;EAEAA,eAAeA,CAAA;IACb,IAAI,CAACD,QAAQ,GAAGG,MAAM,CAACC,UAAU,GAAG,GAAG;IACvC,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE;MAClB,IAAI,CAACF,UAAU,GAAG,KAAK;;EAE3B;EAEAO,UAAUA,CAAA;IACR,IAAI,CAACP,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;EACpC;EAEAQ,sBAAsBA,CAACC,KAAY;IACjCA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAI,CAACT,sBAAsB,GAAG,CAAC,IAAI,CAACA,sBAAsB;EAC5D;EAEAU,aAAaA,CAAA;IACX,IAAI,CAACV,sBAAsB,GAAG,KAAK;EACrC;EAEAW,kBAAkBA,CAAA;IAChB,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,OAAO,CAAC,EAAE;MAAEC,UAAU,EAAE,IAAI,CAAChB;IAAM,CAAE,CAAC;EAAG;CAClE;AA1BCiB,UAAA,EADCpB,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC,C,8CAGzC;AAbUC,eAAe,GAAAmB,UAAA,EAL3BrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWtB,eAAe,CAqC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}