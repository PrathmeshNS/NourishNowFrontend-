{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NgoRegisterComponent } from './register/ngo-register/ngo-register.component';\nimport { HotelRegisterComponent } from './register/hotel-register/hotel-register.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  component: NavbarComponent\n}, {\n  path: 'dashboard',\n  component: DashboardComponent\n}, {\n  path: 'login',\n  component: LoginComponent,\n  pathMatch: 'full'\n}, {\n  path: \"register\",\n  children: [{\n    path: 'ngo',\n    component: NgoRegisterComponent\n  }, {\n    path: 'hotel',\n    component: HotelRegisterComponent\n  }]\n}];\nexport class AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot([{\n        path: '',\n        component: DashboardComponent\n      }, {\n        path: 'login',\n        component: LoginComponent\n      }]), RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule, i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","NavbarComponent","LoginComponent","DashboardComponent","NgoRegisterComponent","HotelRegisterComponent","routes","path","component","pathMatch","children","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["D:\\Angular\\nourish-now\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { NgoRegisterComponent } from './register/ngo-register/ngo-register.component';\nimport { HotelRegisterComponent } from './register/hotel-register/hotel-register.component';\n\nconst routes: Routes = [\n  {\n    path:'', component:NavbarComponent\n  },\n  {\n    path:'dashboard',component:DashboardComponent\n  },\n  {\n    path:'login',component:LoginComponent, pathMatch:'full'\n  },\n  {\n    path:\"register\", children:[\n      {\n        path:'ngo',component:NgoRegisterComponent\n      },\n      {\n        path:'hotel',component:HotelRegisterComponent\n      },\n    ]\n  },\n\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([\n      { path: '', component: DashboardComponent },\n      { path: 'login', component: LoginComponent }\n    ]),\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,kBAAkB,QAAQ,iCAAiC;AACpE,SAASC,oBAAoB,QAAQ,gDAAgD;AACrF,SAASC,sBAAsB,QAAQ,oDAAoD;;;AAE3F,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAC,EAAE;EAAEC,SAAS,EAACP;CACpB,EACD;EACEM,IAAI,EAAC,WAAW;EAACC,SAAS,EAACL;CAC5B,EACD;EACEI,IAAI,EAAC,OAAO;EAACC,SAAS,EAACN,cAAc;EAAEO,SAAS,EAAC;CAClD,EACD;EACEF,IAAI,EAAC,UAAU;EAAEG,QAAQ,EAAC,CACxB;IACEH,IAAI,EAAC,KAAK;IAACC,SAAS,EAACJ;GACtB,EACD;IACEG,IAAI,EAAC,OAAO;IAACC,SAAS,EAACH;GACxB;CAEJ,CAGF;AAYD,OAAM,MAAOM,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBARzBX,YAAY,CAACY,OAAO,CAAC,CACnB;QAAEL,IAAI,EAAE,EAAE;QAAEC,SAAS,EAAEL;MAAkB,CAAE,EAC3C;QAAEI,IAAI,EAAE,OAAO;QAAEC,SAAS,EAAEN;MAAc,CAAE,CAC7C,CAAC,EACFF,YAAY,CAACY,OAAO,CAACN,MAAM,CAAC,EAEpBN,YAAY;IAAA;EAAA;;;2EAEXW,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAd,YAAA,EAAAc,EAAA,CAAAd,YAAA;IAAAe,OAAA,GAFjBf,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}