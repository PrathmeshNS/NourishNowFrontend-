{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log('Form submitted:', this.loginForm.value);\n      // Add your authentication logic here\n    } else {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.loginForm.controls).forEach(key => {\n        const control = this.loginForm.get(key);\n        control?.markAsTouched();\n      });\n    }\n  }\n  get email() {\n    return this.loginForm.get('email');\n  }\n  get password() {\n    return this.loginForm.get('password');\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","fb","loginForm","group","email","required","password","minLength","onSubmit","valid","console","log","value","Object","keys","controls","forEach","key","control","get","markAsTouched","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Angular\\nourish-now\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  loginForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      console.log('Form submitted:', this.loginForm.value);\n      // Add your authentication logic here\n    } else {\n      // Mark all fields as touched to trigger validation messages\n      Object.keys(this.loginForm.controls).forEach(key => {\n        const control = this.loginForm.get(key);\n        control?.markAsTouched();\n      });\n    }\n  }\n\n  get email() { return this.loginForm.get('email'); }\n  get password() { return this.loginForm.get('password'); }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACpB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACN,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACM,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EACJ;EAEAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACN,SAAS,CAACO,KAAK,EAAE;MACxBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACT,SAAS,CAACU,KAAK,CAAC;MACpD;KACD,MAAM;MACL;MACAC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACZ,SAAS,CAACa,QAAQ,CAAC,CAACC,OAAO,CAACC,GAAG,IAAG;QACjD,MAAMC,OAAO,GAAG,IAAI,CAAChB,SAAS,CAACiB,GAAG,CAACF,GAAG,CAAC;QACvCC,OAAO,EAAEE,aAAa,EAAE;MAC1B,CAAC,CAAC;;EAEN;EAEA,IAAIhB,KAAKA,CAAA;IAAK,OAAO,IAAI,CAACF,SAAS,CAACiB,GAAG,CAAC,OAAO,CAAC;EAAE;EAClD,IAAIb,QAAQA,CAAA;IAAK,OAAO,IAAI,CAACJ,SAAS,CAACiB,GAAG,CAAC,UAAU,CAAC;EAAE;CACzD;AA1BYpB,cAAc,GAAAsB,UAAA,EAL1BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWzB,cAAc,CA0B1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}